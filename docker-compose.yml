version: '2.3'

services:

    app:
      build: .
      container_name: ${DOCKER_APP_NAME:-app}
      environment:
        - APP_PORT=${DOCKER_APP_PORT:-9000}
      volumes:
        - .:/var/www
      networks:
        - app-network
      depends_on:
        db:
          condition: service_healthy

    nginx:
      build: .docker/nginx
      container_name: nginx
      restart: always
      tty: true
      ports:
        - "8000:80"
      environment:
        - APP_NAME=${DOCKER_APP_NAME:-app}
        - APP_PORT=${DOCKER_APP_PORT:-9000}
      volumes:
        - .:/var/www
      networks:
        - app-network

    db:
      image: mysql:5.7
      container_name: db
      command: --innodb-use-native-aio=0
      restart: always
      tty: true
      ports:
        - "3306:3306"
      volumes:
        - dbdata:/var/lib/mysql
      environment:
        - MYSQL_DATABASE=laravel
        - MYSQL_USER=root
        - MYSQL_ROOT_PASSWORD=root
      networks:
        - app-network
      healthcheck:
        test: ["CMD-SHELL", 'mysql -uroot --database=laravel --password=root --execute="SELECT count(table_name) > 0 FROM information_schema.tables;" --skip-column-names -B']
        interval: 10s
        timeout: 10s
        retries: 4

    redis:
      image: redis:alpine
      container_name: redis
      expose:
        - 6379
      networks:
        - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
